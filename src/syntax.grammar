@precedence {
  left @left,
  right @right
}

@top Expression { expression }

@skip { space }

expression {
  ObjectAccess |
  ArrayAccess |
  FunctionCall |
  Number |
  String |
  Boolean |
  Null |
  Object |
  Array |
  Identifier |
  TernaryExpression |
  BinaryExpression |
  UnaryExpression |
  "(" expression ")"
}

Object {
  "{" (expression ":" expression ("," expression ":" expression)*)? "}"
}

ObjectAccess {
  expression !left (NullSafeMemberOf | MemberOf) Identifier
}

ArrayAccess {
  expression !left "[" expression "]"
}

FunctionCall {
  (Identifier | ObjectAccess) "(" (expression ("," expression)*)? ")"
}

Array {
  "[" (expression ("," expression)*)? "]"
}

UnaryExpression {
  UnaryOperator !right expression
}

BinaryExpression {
  expression !right (OperatorKeyword | Operator) expression
}

TernaryExpression {
  expression !right '?' expression ':' expression
}

@tokens {
  Number { (($[0-9]+('_' $[0-9]+)*('.' (![.])($[0-9]+('_' $[0-9]+)*)?)?)($[eE]$[+-]?$[0-9]+('_' $[0-9]+)*)?) }
  Identifier { $[a-zA-Z_]+$[a-zA-Z_0-9]* }
  String { ( '"' (!["\\] | "\\" _)* ('"' | @eof) ) | "'" (!['\\] | "\\" _)* ("'" | @eof) }
  Null { "null" }
  Boolean { "true" | "false" }

  space { $[ \t\n\r]+ }

  OperatorKeyword { 'starts with' | 'ends with' | 'contains' | 'matches' | 'not in' | 'not' | 'and' | 'or' | 'in' }
  Operator { '===' | '!==' |  '||' | '&&' | '==' | '!=' | '>=' | '<=' | '..' | '**' | '!' | '|' | '^' | '&' | '<' | '>' | '+' | '-' | '~' | '*' | '/' | '%' | '??' | '?:' }
  UnaryOperator { '!' | 'not' | '+' | '-' }
  MemberOf { '.' }
  NullSafeMemberOf { '?.' }

  @precedence {
    NullSafeMemberOf,
    MemberOf,
    UnaryOperator,
    OperatorKeyword,
    Boolean,
    Null,
    Number,
    Identifier
  }
}

@detectDelim
